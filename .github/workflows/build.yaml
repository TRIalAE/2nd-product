name: Builder
run-name: ${{ github.head_ref || github.ref_name }}-builder

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.yml"
      - "**.yaml"
      - "**.md"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.yml"
      - "**.yaml"
      - "**.md"
  workflow_dispatch:

permissions:
  contents: read

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: second_product

jobs:
  prepare:
    name: Get godot version
    runs-on: ubuntu-latest
    steps:
      - run: echo "GODOT_VERSION=${{ env.GODOT_VERSION }}"
    outputs:
      godot-version: ${{ env.GODOT_VERSION }}

  export:
    name: ${{ matrix.platform }} Export
    needs: prepare
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:mono-${{ needs.prepare.outputs.godot-version }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "linux"
            extension: ""
          - platform: "macos"
            extension: ".zip"
          - platform: "windows"
            extension: ".exe"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Remove GDUnit4
        # Since running in headless mode causes a segmentation fault
        run: |
          if [ -d addons/gdUnit4 ]; then
            rm -rf addons/gdUnit4
          fi
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          if [ "$HOME" != "/root" ]; then
            mv /root/.config/godot ~/.config/godot
            mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono
          fi
      - name: Initial Project Setup
        run: godot --headless --build-solutions --quit || exit 0
      - name: Export Project
        run: |
          EXPORT_DIR="build/${{ matrix.platform }}"
          mkdir -v -p "${EXPORT_DIR}"
          godot --headless --export-release "${{ matrix.platform }}" "${EXPORT_DIR}/${EXPORT_NAME}${{ matrix.extension }}"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}
          path: build/${{ matrix.platform }}
          if-no-files-found: error
